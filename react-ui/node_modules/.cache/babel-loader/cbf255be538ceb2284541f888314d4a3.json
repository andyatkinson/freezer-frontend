{"ast":null,"code":"//\n// this \"owns\" state.items\n//\nimport { ADD_ITEM, FETCH_ITEMS_BEGIN, FETCH_ITEMS_SUCCESS, FETCH_ITEMS_FAILURE } from '../actions/fetchItems';\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n};\nexport default function itemReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_ITEM:\n      return {\n        items: [...state.items, action.item]\n      };\n\n    case FETCH_ITEMS_BEGIN:\n      // mark the state as loading\n      // reset any errors\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case FETCH_ITEMS_SUCCESS:\n      // set loading to false\n      // replace items with items from server\n      return { ...state,\n        loading: false,\n        items: action.payload.items\n      };\n\n    case FETCH_ITEMS_FAILURE:\n      // set loading to false\n      // TODO\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        items: []\n      };\n\n    default:\n      //always have a default case\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/andy/Projects/freezer-frontend/src/reducers/itemReducer.js"],"names":["ADD_ITEM","FETCH_ITEMS_BEGIN","FETCH_ITEMS_SUCCESS","FETCH_ITEMS_FAILURE","initialState","items","loading","error","itemReducer","state","action","type","item","payload"],"mappings":"AAAA;AACA;AACA;AACA,SACEA,QADF,EAEEC,iBAFF,EAGEC,mBAHF,EAIEC,mBAJF,QAKO,uBALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,SAASC,WAAT,CACbC,KAAK,GAAGL,YADK,EAEbM,MAFa,EAGb;AACA,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,QAAL;AACE,aAAO;AACLK,QAAAA,KAAK,EAAE,CACL,GAAGI,KAAK,CAACJ,KADJ,EAELK,MAAM,CAACE,IAFF;AADF,OAAP;;AAOF,SAAKX,iBAAL;AACE;AACA;AACA,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF,SAAKL,mBAAL;AACE;AACA;AACA,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,OAAO,EAAE,KAFJ;AAGLD,QAAAA,KAAK,EAAEK,MAAM,CAACG,OAAP,CAAeR;AAHjB,OAAP;;AAMF,SAAKF,mBAAL;AACE;AACA;AACA,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACG,OAAP,CAAeN,KAHjB;AAILF,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAOF;AACE;AACA,aAAOI,KAAP;AAvCJ;AAyCD","sourcesContent":["//\n// this \"owns\" state.items\n//\nimport {\n  ADD_ITEM,\n  FETCH_ITEMS_BEGIN,\n  FETCH_ITEMS_SUCCESS,\n  FETCH_ITEMS_FAILURE\n} from '../actions/fetchItems'\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n}\n\nexport default function itemReducer(\n  state = initialState,\n  action\n) {\n  switch(action.type) {\n    case ADD_ITEM:\n      return {\n        items: [\n          ...state.items,\n          action.item\n        ]\n      }\n\n    case FETCH_ITEMS_BEGIN:\n      // mark the state as loading\n      // reset any errors\n      return {\n        ...state,\n        loading: true,\n        error: null\n      }\n\n    case FETCH_ITEMS_SUCCESS:\n      // set loading to false\n      // replace items with items from server\n      return {\n        ...state,\n        loading: false,\n        items: action.payload.items\n      }\n\n    case FETCH_ITEMS_FAILURE:\n      // set loading to false\n      // TODO\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        items: []\n      }\n\n    default:\n      //always have a default case\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}