{"ast":null,"code":"var _jsxFileName = \"/Users/andy/Projects/freezer-frontend/src/components/ItemList.js\";\nimport React from 'react';\nimport Item from './Item';\nimport { connect } from 'react-redux';\nimport { fetchItems } from '../actions/fetchItems';\nimport * as Ons from 'react-onsenui';\n\nclass ItemList extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchItems());\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      items\n    } = this.props;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ons-list-header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Items\"), items.map(item => /*#__PURE__*/React.createElement(Item, Object.assign({\n      key: item.id\n    }, item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  items: state.items.items,\n  loading: state.items.loading,\n  error: state.items.error\n});\n\nexport default connect(mapStateToProps)(ItemList);","map":{"version":3,"sources":["/Users/andy/Projects/freezer-frontend/src/components/ItemList.js"],"names":["React","Item","connect","fetchItems","Ons","ItemList","Component","componentDidMount","props","dispatch","render","error","loading","items","message","map","item","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,eAArB;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX,CAAoBN,UAAU,EAA9B;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKL,KAAvC;;AAEA,QAAIG,KAAJ,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACG,OAAnB,CAAP;AACD;;AAED,QAAIF,OAAJ,EAAa;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEGC,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACb,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,OAAwBD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CAFH,CADF;AAQD;;AAxBoC;;AA2BvC,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCN,EAAAA,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYA,KADa;AAEhCD,EAAAA,OAAO,EAAEO,KAAK,CAACN,KAAN,CAAYD,OAFW;AAGhCD,EAAAA,KAAK,EAAEQ,KAAK,CAACN,KAAN,CAAYF;AAHa,CAAL,CAA7B;;AAMA,eAAeT,OAAO,CAACgB,eAAD,CAAP,CAAyBb,QAAzB,CAAf","sourcesContent":["import React from 'react'\nimport Item from './Item'\nimport { connect } from 'react-redux'\nimport { fetchItems } from '../actions/fetchItems'\nimport * as Ons from 'react-onsenui'\n\nclass ItemList extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchItems())\n  }\n\n  render() {\n    const { error, loading, items } = this.props\n\n    if (error) {\n      return <div>Error! {error.message}</div>\n    }\n\n    if (loading) {\n      return <div>Loading...</div>\n    }\n\n    return (\n      <div>\n        <ons-list-header>Items</ons-list-header>\n        {items.map(item =>\n          <Item key={item.id} {...item} />\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  items: state.items.items,\n  loading: state.items.loading,\n  error: state.items.error\n})\n\nexport default connect(mapStateToProps)(ItemList)\n"]},"metadata":{},"sourceType":"module"}